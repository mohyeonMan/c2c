services:
  postgres:
    image: postgres:15-alpine
    container_name: c2c-postgres
    environment:
      POSTGRES_DB: c2c
      POSTGRES_USER: c2c
      POSTGRES_PASSWORD: c2c123
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    ports:
      - "5431:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    networks: [c2c-network]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U c2c -d c2c"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  redis:
    image: redis:7.2-alpine
    container_name: c2c-redis
    # ⬇️ 한 방식만 사용 권장. (지금은 command 방식 유지)
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      # - ./scripts/redis.conf:/usr/local/etc/redis/redis.conf:ro   # 사용 안함
    networks: [c2c-network]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: unless-stopped

  c2c-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: c2c-app
    ports:
      - "8080:8080"
    volumes:
      # ⬇️ devcontainer.json의 workspaceFolder와 일치
      - .:/workspace:cached
    networks: [c2c-network]
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: sleep infinity

networks:
  c2c-network:
    driver: bridge
    name: c2c-network

volumes:
  postgres_data:
    name: c2c-postgres-data
  redis_data:
    name: c2c-redis-data
